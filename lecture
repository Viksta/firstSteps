1. Комментарии. Не высвечиваются в конечном результате: 
// This is an in-line comment. - на одну строку
/* This is a
multi-line comment */    - на несколько строк
В большинстве редакторов строку кода можно закомментировать, нажав комбинацию клавиш Ctrl+/ для однострочного комментария 
и что-то вроде Ctrl+Shift+/ – для многострочных комментариев (выделите кусок кода и нажмите комбинацию клавиш). 

2. var - переменная. Сначала заявляем ее, а потом даем значение. 
var myVar;
myVar = 5;

и в таком роде дальше: 

var myVar;
myVar = 5;
var myNum;
myNum = myVar;

3. В конце строки ставить ;

4. string literal - строковая (литеральная) константа
var myName = "your name";
то, что в кавычках - строковый литерал

5. Когда объявляются переменные JavaScript, они имеют начальное значение undefined. 
Если вы выполните математическую операцию над неопределенной переменной, ваш результат будет NaN, что означает "Не число". 
Если вы объедините строку с неопределенной переменной, вы получите строку undefined.

6. camelCase - стиль, у которого первая буква маленькая, а все последующие без пробела с заглавной. Применение закглавных букв важно

7. var - общий
let - локальный. 
Т.е. задается var и внутри него уже пишутся let. Сделаны, чтобы дополнять и не перекрывать друг друга: 
let catName = "Oliver";
let catSound = "Meow!";

8. const - такие же функции, как и у let, но он создает переменную только для чтения, переназначить ее нельзя:
const FAV_PET = "Кошки";
FAV_PET = "Собаки";
Консоль отобразит сообщение об ошибке из-за переназначения значения FAV_PET. Называть переменные, которые вы не хотите переназначать, используя ключевое слово const.

const  FCC = "freeCodeCamp"; // Change this line
let  fact = "is cool!"; // Change this line
fact = "is awesome!";
console.log(FCC, fact); // Change this line

9. Математические вычисления: 
const sum = 10 + 10;   // сложение
const difference = 45 - 33;   // вычитание
const product = 8 * 10;   // умножение
const quotient = 66 / 33;   // деление

10. Число можно увеличить на один, добавив к нему ++
i++; является эквивалентом i = i + 1;
Примечание: Вся строка становится i++;, устраняя необходимость в знаке равенства.
Например, 
let myVar = 87
// добавляя только два плюса значение myVar станет уже равно 88, вот:
myVar++;

11. Аналогично уменьшаем число, добавив --
let myVar = 11;
myVar--;



